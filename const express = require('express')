const express = require('express')
const crypto = require("crypto-js")
const app = express()
const port = 3000


app.get('/${filename}', (req, res) => {



pm.environment.set("azure_storage_account", "middlewaremulesoftstore");
pm.environment.set("azure_storage_key", "dqnCabBGCRojPpwlhDr5Xq+pyrAv3TCqdTyCs4qdW+pyZ5/GTE82Wm0n7VHYORGW/wt09n1n3VjQZw/UPsXdYw==");


// Set Date header value for authorization
// Should be UTC GMT string
pm.environment.set("header_date", new Date().toUTCString());
console.log("header date", new Date().toUTCString());
// Sadness: https://github.com/postmanlabs/postman-app-support/issues/2922


// Get hash of all header-name:value
const headers = pm.request.getHeaders({ ignoreCase: true, enabled: true });

// Construct Signature value for Authorization header

var signatureRaw = pm.request.method.toUpperCase() + "\n" +  
                "\n" +  
               "application/xml" + "\n" +  
               "\n" +  
             
               "x-ms-date:" + pm.variables.get("header_date") +"\n" + 
               "/middlewaremulesoftstore/certificate-processed/test.txt";  

// Now, construct signature raw string

console.log("Signature String", JSON.stringify(signatureRaw));

// Hash it using HMAC-SHA256 and then encode using base64
const storageKey = pm.environment.get("azure_storage_key");
const signatureBytes = crypto.HmacSHA256(signatureRaw, crypto.enc.Base64.parse(storageKey));
const signatureEncoded = signatureBytes.toString(crypto.enc.Base64);

console.log("Storage Account", pm.environment.get("azure_storage_account"));
console.log("Storage Key", storageKey);

// Finally, make it available for headers
pm.variables.set("header_authorization", 
    `SharedKey ${pm.environment.get("azure_storage_account")}:${signatureEncoded}`);
  
})

app.listen(port, () => {
  console.log(`Example app listening at http://localhost:${port}`)
})